platform: Azure

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

humio:
  s3mode: default
  #One of humio,strimzi,external
  kafkaManager: "humio"
  kafkaPrefixEnable: false
  #kafkaPrefix
  buckets: {}

  replicaCount: 3
  image:
    repository: humio/humio-core
    tag: "1.70.0--SNAPSHOT--build-323434--SHA-dfa77220c22755bc0f8dee124ef548e8c0d740b1"
  autoRebalancePartitions: true
  digestPartitionsCount: 720
  storagePartitionsCount: 24
  targetReplicationFactor: 2
  smtp:
    enabled: false
    host: ""
    username: ""
    password: ""
    sender:
    port: 587
    startTLS: true
  jvmARGS:
    ""
    # -server -Xss2m
    # -XX:MaxRAMPercentage=75.0
    # -XX:+UseParallelGC -XX:+UseNUMA
    # -XX:+UseTransparentHugePages
    # -XX:+UnlockDiagnosticVMOptions
    # -XX:CompileCommand=dontinline,com/humio/util/HotspotUtilsJ.dontInline
    # -Xlog:gc+jni=debug:stdout
    # -Xlog:gc*:stdout:time,tags
    # -Dakka.log-config-on-start=on -Dzookeeper.client.secure=false
  enableFeatures:
    - FOWARDING
    - FDR_POLLING_ON_NODE
  dataVolumePersistentVolumeClaimSpecTemplate:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1.5Ti
    storageClassName: openebs-lvmpv
  nodeCount: 3
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}

  service:
    type: ClusterIP
    port: 80

  ingress:
    ui:
      enabled: false
      # className: "ngnix"
      annotations: {}
      tls: false
    inputs:
      enabled: false
      # className: "ngnix"
      annotations: {}
      tls: false
  nodeSelector: {}

  tolerations: []

  affinity: {}

opentelemetryOperator:
  enabled: true
  serviceAccount:
    create: true
