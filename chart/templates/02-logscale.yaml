---
apiVersion: core.humio.com/v1alpha1
kind: HumioCluster
metadata:
  name: {{ include "humio-instance.fullname" . }}
  labels:
    {{- include "humio-instance.labels" . | nindent 4 }}
spec:
  initServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}
  authServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}
  humioServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}

  {{- if or .Values.otel.components.inject .Values.humio.podAnnotations }}
  podAnnotations:
  {{- if .Values.otel.components.inject }}
    "instrumentation.opentelemetry.io/inject-java": {{ include "humio-instance.fullname" . }}-java
    "instrumentation.opentelemetry.io/container-names": "humio"
  {{- end }}
  {{- with .Values.humio.podAnnotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}

  {{- if .Values.humio.priorityClassName }}
  priorityClassName: {{ .Values.humio.priorityClassName }}
  {{- end }}
  resources:
    {{- toYaml .Values.humio.resources | nindent 4 }}
  {{- with .Values.humio.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if eq .Values.humio.drMode "bootstrap" }}
  nodeCount: 1
  {{- else }}
  nodeCount: {{ .Values.humio.nodeCount }}
  {{- end }}
  {{- with .Values.humio.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.humio.topologySpreadConstraints }}
  topologySpreadConstraints:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  dataVolumePersistentVolumeClaimSpecTemplate:
  {{- with .Values.humio.dataVolumePersistentVolumeClaimSpecTemplate }}
    {{- toYaml . | nindent 4 }}
  {{- end }}

  environmentVariables:
  {{- include "humio-instance.environment" . | nindent 2 }}

  extraHumioVolumeMounts:
    - name: java-logs
      mountPath: /data/java-logs
    - name: logs
      mountPath: /data/logs
{{- if .Values.humio.trustManagerConfigMap }}
    - name: truststore
      mountPath: /data/truststore
{{- end }}
{{- if .Values.humio.kafka.keystore }}
    - name: kafka-keystore
      mountPath: /data/kafka-keystore
{{- end }}   
  extraVolumes:
    - name: java-logs
      emptyDir: {}
    - name: logs
      emptyDir: {}
{{- if .Values.humio.trustManagerConfigMap }}
    - name: truststore
      configMap:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
        name: {{ .Values.humio.trustManagerConfigMap }}
{{- end }}
{{- if .Values.humio.kafka.keystore }}
    - name: kafka-keystore
      secret:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
        name: {{ .Values.humio.kafka.keystore }}
{{- end }}  
  esHostnameSource: {}
  extraKafkaConfigs: {{ .Values.humio.kafka.extraConfig | quote }}
{{- if eq  .Values.humio.auth.method  "saml" }}
  idpCertificateSecretName: "{{ include "humio-instance.fullname" . }}-idp-certificate"
  {{- end }}
  hostname: {{ .Values.humio.fqdn }}
  hostnameSource: {}
  image: "{{ .Values.humio.image.repository }}:{{ .Values.humio.image.tag }}"
{{- if .Values.humio.helperImage }}  
  helperImage: {{ .Values.humio.helperImage }}
{{- end }}
  #We use helm to produce ingress so we prevent operator from doing it
  ingress: {}
  license:
    secretKeyRef:
      key: license
      name: "{{ include "humio-instance.fullname" . }}-license"
  autoRebalancePartitions: {{ .Values.humio.autoRebalancePartitions | default true }}
  digestPartitionsCount: {{ .Values.humio.digestPartitionsCount }}
  storagePartitionsCount: {{ .Values.humio.storagePartitionsCount }}
  targetReplicationFactor: 1
  tls:
    enabled: false
  humioServiceAnnotations:
    service.kubernetes.io/topology-aware-hints: auto
    {{- with .Values.humio.service.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
{{- if ne .Values.humio.drMode "bootstrap" }}
  nodePools:
{{- if or (eq .Values.humio.drMode "none") (eq .Values.humio.drMode "inputs") }}
    - name: ingest-only
      spec:
        image: "{{ .Values.humio.image.repository }}:{{ .Values.humio.image.tag }}"
        nodeCount: {{ .Values.humio.nodepools.ingest.nodeCount }}
        initServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}
        authServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}
        humioServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}

        {{- if or .Values.otel.components.inject .Values.humio.podAnnotations }}  
        podAnnotations:
        {{- if .Values.otel.components.inject }}
          "instrumentation.opentelemetry.io/inject-java": {{ include "humio-instance.fullname" . }}-java
          "instrumentation.opentelemetry.io/container-names": "humio"
        {{- end }}
        {{- with .Values.humio.podAnnotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}

        extraHumioVolumeMounts:
          - name: java-logs
            mountPath: /data/java-logs
          - name: logs
            mountPath: /data/logs
      {{- if .Values.humio.trustManagerConfigMap }}
          - name: truststore
            mountPath: /data/truststore
      {{- end }}            
      {{- if .Values.humio.kafka.keystore }}
          - name: kafka-keystore
            mountPath: /data/kafka-keystore
      {{- end }}         
        extraVolumes:
          - name: java-logs
            emptyDir: {}
          - name: logs
            emptyDir: {}
      {{- if .Values.humio.trustManagerConfigMap }}
          - name: truststore
            configMap:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ .Values.humio.trustManagerConfigMap }}
      {{- end }}            
      {{- if .Values.humio.kafka.keystore }}
          - name: kafka-keystore
            secret:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ .Values.humio.kafka.keystore }}
      {{- end }}        
        {{- if .Values.humio.nodepools.ingest.priorityClassName }}
        priorityClassName: {{ .Values.humio.nodepools.ingest.priorityClassName }}
        {{- end }}
        resources:
          {{- toYaml .Values.humio.nodepools.ingest.resources | nindent 14 }}
        {{- with .Values.humio.nodepools.ingest.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.humio.nodepools.ingest.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.humio.nodepools.ingest.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        extraKafkaConfigs: {{ .Values.humio.kafka.extraConfig | quote }}

        dataVolumePersistentVolumeClaimSpecTemplate:
        {{- with .Values.humio.frontEndDataVolumePersistentVolumeClaimSpecTemplate }}
          {{- toYaml . | nindent 10 }}
        {{- end }}

        humioServiceAnnotations:
          service.kubernetes.io/topology-aware-hints: auto
          {{- with .Values.humio.service.inputs.annotations }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if eq .Values.platform.provider "gcp" }}
          cloud.google.com/backend-config: '{"default": "{{ include "humio-instance.fullname" . }}-inputs"}'
          {{- end }}
        environmentVariables:
          {{- include "humio-instance.environment" . | nindent 10 }}
          - name: NODE_ROLES
            value: httponly
          - name: QUERY_COORDINATOR
            value: "false"
{{- end }}
{{- if or (eq .Values.humio.drMode "none") (or (eq .Values.humio.drMode "inputs") (eq .Values.humio.drMode "ui")) }}
    - name: http-only
      spec:
        image: "{{ .Values.humio.image.repository }}:{{ .Values.humio.image.tag }}"
        nodeCount: {{ .Values.humio.nodepools.ui.nodeCount }}
        initServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}
        authServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}
        humioServiceAccountName: {{ include "humio-instance.humio.serviceAccountName" . }}

        {{- if or .Values.otel.components.inject .Values.humio.podAnnotations }}  
        podAnnotations:
        {{- if .Values.otel.components.inject }}
          "instrumentation.opentelemetry.io/inject-java": {{ include "humio-instance.fullname" . }}-java
          "instrumentation.opentelemetry.io/container-names": "humio"
        {{- end }}
        {{- with .Values.humio.podAnnotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}

        extraHumioVolumeMounts:
          - name: java-logs
            mountPath: /data/java-logs
          - name: logs
            mountPath: /data/logs
      {{- if .Values.humio.trustManagerConfigMap }}
          - name: truststore
            mountPath: /data/truststore
      {{- end }}            
      {{- if .Values.humio.kafka.keystore }}
          - name: kafka-keystore
            mountPath: /data/kafka-keystore
      {{- end }}            
        extraVolumes:
          - name: java-logs
            emptyDir: {}
          - name: logs
            emptyDir: {}
      {{- if .Values.humio.trustManagerConfigMap }}
          - name: truststore
            configMap:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ .Values.humio.trustManagerConfigMap }}
      {{- end }}            
      {{- if .Values.humio.kafka.keystore }}
          - name: kafka-keystore
            secret:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ .Values.humio.kafka.keystore }}
      {{- end }}        
        {{- if .Values.humio.nodepools.ui.priorityClassName }}
        priorityClassName: {{ .Values.humio.nodepools.ui.priorityClassName }}
        {{- end }}
        resources:
          {{- toYaml .Values.humio.nodepools.ui.resources | nindent 14 }}
        {{- with .Values.humio.nodepools.ui.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.humio.nodepools.ui.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.humio.nodepools.ui.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        extraKafkaConfigs: {{ .Values.humio.kafka.extraConfig | quote }}

        dataVolumePersistentVolumeClaimSpecTemplate:
        {{- with .Values.humio.frontEndDataVolumePersistentVolumeClaimSpecTemplate }}
          {{- toYaml . | nindent 10 }}
        {{- end }}

        humioServiceAnnotations:
          service.kubernetes.io/topology-aware-hints: auto
          {{- with .Values.humio.service.ui.annotations }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if eq .Values.platform.provider "gcp" }}
          cloud.google.com/backend-config: '{"default": "{{ include "humio-instance.fullname" . }}-ui"}'
          {{- end }}
        environmentVariables:
          {{- include "humio-instance.environment" . | nindent 10 }}
          - name: NODE_ROLES
            value: httponly
          - name: QUERY_COORDINATOR
            value: "true"
{{- end }}
{{- end }}