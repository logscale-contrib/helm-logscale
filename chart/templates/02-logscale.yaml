---
apiVersion: core.humio.com/v1alpha1
kind: HumioCluster
metadata:
  name: {{ include "humio-instance.fullname" . }}
  labels:
    {{- include "humio-instance.labels" . | nindent 4 }}
spec:
  initServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
  authServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
  humioServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
  {{- if .Values.logscale.containerSecurityContext }}
  containerSecurityContext:
    {{- toYaml .Values.logscale.containerSecurityContext | nindent 4 }}        
  {{- end }}
  {{- if or .Values.otel.components.inject .Values.logscale.podAnnotations }}
  podAnnotations:
  {{- if .Values.otel.components.inject }}
    "instrumentation.opentelemetry.io/inject-java": {{ include "humio-instance.fullname" . }}-java
    "instrumentation.opentelemetry.io/container-names": "humio"
  {{- end }}
  {{- with .Values.logscale.podAnnotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}

  {{- if .Values.logscale.priorityClassName }}
  priorityClassName: {{ .Values.logscale.priorityClassName }}
  {{- end }}
  {{- with .Values.logscale.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}  
  {{- with .Values.logscale.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if eq .Values.logscale.drMode "bootstrap" }}
  nodeCount: 1
  {{- else }}
  nodeCount: {{ .Values.logscale.nodeCount }}
  {{- end }}
  {{- with .Values.logscale.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.logscale.topologySpreadConstraints }}
  topologySpreadConstraints:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  dataVolumePersistentVolumeClaimPolicy: 
    reclaimType: {{ .Values.logscale.dataVolumePersistentVolumeClaimPolicy | default "OnNodeDelete" }}
  dataVolumePersistentVolumeClaimSpecTemplate:
  {{- with .Values.logscale.dataVolumePersistentVolumeClaimSpecTemplate }}
    {{- toYaml . | nindent 4 }}
  {{- end }}

  commonEnvironmentVariables:
  {{- include "humio-instance.environment" . | nindent 2 }}
  {{- include "humio-instance.environmentKafka" . | nindent 2 }}

  extraHumioVolumeMounts:
    - name: java-logs
      mountPath: /data/java-logs
    - name: logs
      mountPath: /data/logs
{{- if .Values.logscale.trustManagerConfigMap }}
    - name: truststore
      mountPath: /mnt/truststore
{{- end }}
{{- if .Values.logscale.kafka.keystore }}
    - name: kafka-keystore
      mountPath: /data/kafka-keystore
{{- end }}
    - name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
      mountPath: /var/lib/humio/config/logging
      readOnly: true

{{- include "humio-instance.extraHumioVolumeMountsKafka" . | nindent 4 }}      
{{- with .Values.logscale.extraHumioVolumeMounts }}
  {{- toYaml . | nindent 4 }}
{{- end }}

  extraVolumes:
    - name: java-logs
      emptyDir: {}
    - name: logs
      emptyDir: {}
{{- if .Values.logscale.trustManagerConfigMap }}
    - name: truststore
      configMap:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
        name: {{ .Values.logscale.trustManagerConfigMap }}
{{- end }}
{{- if .Values.logscale.kafka.keystore }}
    - name: kafka-keystore
      secret:
        # Provide the name of the ConfigMap containing the files you want
        # to add to the container
        secretName: {{ .Values.logscale.kafka.keystore }}
{{- end }}  
    - name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
      configMap:
        name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
{{- include "humio-instance.extraVolumesKafka" . | nindent 4 }}
{{- with .Values.logscale.extraVolumes }}
    {{- toYaml . | nindent 4 }}
{{- end }}

  esHostnameSource: {}
{{- if eq  .Values.logscale.auth.method  "saml" }}
  idpCertificateSecretName: "{{ include "humio-instance.fullname" . }}-idp-certificate"
{{- end }}
  hostname: {{ .Values.logscale.fqdn }}
  hostnameSource: {}
  image: "{{ .Values.logscale.image.repository }}:{{ .Values.logscale.image.tag }}"
  {{- if .Values.logscale.image.pullSecrets }}
  imagePullSecrets:
  {{- toYaml .Values.logscale.image.pullSecrets | nindent 4 }}
  {{- end }}
{{- if .Values.logscale.helperImage }}  
  helperImage: {{ .Values.logscale.helperImage }}
{{- end }}
  #We use helm to produce ingress so we prevent operator from doing it
  ingress: {}
  license:
    secretKeyRef:
      key: {{ .Values.logscale.existingLicenseSecretNameKey | default "license" }}
      name: {{ .Values.logscale.existingLicenseSecretName }}
  autoRebalancePartitions: {{ .Values.logscale.autoRebalancePartitions | default true }}
  digestPartitionsCount: {{ .Values.logscale.digestPartitionsCount }}
  storagePartitionsCount: {{ .Values.logscale.storagePartitionsCount }}
  targetReplicationFactor: 1
  tls:
    enabled: false
  humioServiceType: {{ .Values.logscale.service.type }} 
  humioServiceAnnotations:
    service.kubernetes.io/topology-aware-hints: auto
    {{- with .Values.logscale.service.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
{{- if ne .Values.logscale.drMode "bootstrap" }}
  nodePools:
{{- if or (eq .Values.logscale.drMode "none") (eq .Values.logscale.drMode "inputs") }}
    - name: ingest-only
      spec:
        image: "{{ .Values.logscale.image.repository }}:{{ .Values.logscale.image.tag }}"
        {{- if .Values.logscale.image.pullSecrets }}
        imagePullSecrets:
        {{- toYaml .Values.logscale.image.pullSecrets | nindent 10 }}
        {{- end }}        
        nodeCount: {{ .Values.logscale.nodepools.ingest.nodeCount }}
        initServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
        authServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
        humioServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
        {{- if .Values.logscale.nodepools.ingest.containerSecurityContext }}
        containerSecurityContext:
          {{- toYaml .Values.logscale.nodepools.ingest.containerSecurityContext | nindent 10 }}        
        {{- end }}
        {{- if or .Values.otel.components.inject .Values.logscale.podAnnotations }}  
        podAnnotations:
        {{- if .Values.otel.components.inject }}                
          "instrumentation.opentelemetry.io/inject-java": {{ include "humio-instance.fullname" . }}-java
          "instrumentation.opentelemetry.io/container-names": "humio"
        {{- end }}
        {{- with .Values.logscale.podAnnotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}

        extraHumioVolumeMounts:
          - name: java-logs
            mountPath: /data/java-logs
          - name: logs
            mountPath: /data/logs
      {{- if .Values.logscale.trustManagerConfigMap }}
          - name: truststore
            mountPath: /mnt/truststore
      {{- end }}            
      {{- if .Values.logscale.kafka.keystore }}
          - name: kafka-keystore
            mountPath: /data/kafka-keystore
      {{- end }}
          - name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
            mountPath: /var/lib/humio/config/logging
            readOnly: true     
      {{- include "humio-instance.extraHumioVolumeMountsKafka" . | nindent 10 }}      
      {{- with .Values.logscale.extraHumioVolumeMounts }}
        {{- toYaml . | nindent 10 }}
      {{- end }}            
        extraVolumes:
          - name: java-logs
            emptyDir: {}
          - name: logs
            emptyDir: {}
      {{- if .Values.logscale.trustManagerConfigMap }}
          - name: truststore
            configMap:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ .Values.logscale.trustManagerConfigMap }}
      {{- end }}            
      {{- if .Values.logscale.kafka.keystore }}
          - name: kafka-keystore
            secret:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              secretName: {{ .Values.logscale.kafka.keystore }}
      {{- end }}        
          - name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
            configMap:
              name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
        {{- include "humio-instance.extraVolumesKafka" . | nindent 10 }}
        {{- with .Values.logscale.extraVolumes }}
            {{- toYaml . | nindent 10 }}
        {{- end }}              
        {{- if .Values.logscale.nodepools.ingest.priorityClassName }}
        priorityClassName: {{ .Values.logscale.nodepools.ingest.priorityClassName }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ingest.resources }}
        resources:
          {{- toYaml . | nindent 14 }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ingest.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ingest.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ingest.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}


        dataVolumePersistentVolumeClaimSpecTemplate:
        {{- with .Values.logscale.frontEndDataVolumePersistentVolumeClaimSpecTemplate }}
          {{- toYaml . | nindent 10 }}
        {{- end }}

        dataVolumePersistentVolumeClaimPolicy: 
          reclaimType: {{ .Values.logscale.frontEnddataVolumePersistentVolumeClaimPolicy | default "None" }}
        humioServiceType: {{ .Values.logscale.service.inputs.type }}
        humioServiceAnnotations:
          service.kubernetes.io/topology-aware-hints: auto
          {{- with .Values.logscale.service.inputs.annotations }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if eq .Values.platform.provider "gcp" }}
          cloud.google.com/backend-config: '{"default": "{{ include "humio-instance.fullname" . }}-inputs"}'
          {{- end }}
        environmentVariables:
          - name: NODE_ROLES
            value: httponly
          - name: QUERY_COORDINATOR
            value: "false"
{{- end }}
{{- if or (eq .Values.logscale.drMode "none") (or (eq .Values.logscale.drMode "inputs") (eq .Values.logscale.drMode "ui")) }}
    - name: http-only
      spec:
        image: "{{ .Values.logscale.image.repository }}:{{ .Values.logscale.image.tag }}"
        {{- if .Values.logscale.image.pullSecrets }}
        imagePullSecrets:
        {{- toYaml .Values.logscale.image.pullSecrets | nindent 10 }}
        {{- end }}        
        nodeCount: {{ .Values.logscale.nodepools.ui.nodeCount }}
        initServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
        authServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
        humioServiceAccountName: {{ include "humio-instance.logscale.serviceAccountName" . }}
        {{- if .Values.logscale.nodepools.ui.containerSecurityContext }}
        containerSecurityContext:
          {{- toYaml .Values.logscale.nodepools.ui.containerSecurityContext | nindent 10 }}        
        {{- end }}
        {{- if or .Values.otel.components.inject .Values.logscale.podAnnotations }}  
        podAnnotations:
        {{- if .Values.otel.components.inject }}
          "instrumentation.opentelemetry.io/inject-java": {{ include "humio-instance.fullname" . }}-java
          "instrumentation.opentelemetry.io/container-names": "humio"
        {{- end }}
        {{- with .Values.logscale.podAnnotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}

        extraHumioVolumeMounts:
          - name: java-logs
            mountPath: /data/java-logs
          - name: logs
            mountPath: /data/logs
      {{- if .Values.logscale.trustManagerConfigMap }}
          - name: truststore
            mountPath: /mnt/truststore
      {{- end }}            
      {{- if .Values.logscale.kafka.keystore }}
          - name: kafka-keystore
            mountPath: /data/kafka-keystore
      {{- end }}     
          - name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
            mountPath: /var/lib/humio/config/logging
            readOnly: true             
      {{- include "humio-instance.extraHumioVolumeMountsKafka" . | nindent 10 }}      
      {{- with .Values.logscale.extraHumioVolumeMounts }}
        {{- toYaml . | nindent 10 }}
      {{- end }}            
        extraVolumes:
          - name: java-logs
            emptyDir: {}
          - name: logs
            emptyDir: {}
      {{- if .Values.logscale.trustManagerConfigMap }}
          - name: truststore
            configMap:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ .Values.logscale.trustManagerConfigMap }}
      {{- end }}            
      {{- if .Values.logscale.kafka.keystore }}
          - name: kafka-keystore
            secret:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              secretName: {{ .Values.logscale.kafka.keystore }}
      {{- end }}
          - name: "{{ include "humio-instance.fullname" . }}-loggingconfig"
            configMap:
              name: "{{ include "humio-instance.fullname" . }}-loggingconfig"      
        {{- include "humio-instance.extraVolumesKafka" . | nindent 10 }}
        {{- with .Values.logscale.extraVolumes }}
            {{- toYaml . | nindent 10 }}
        {{- end }}              
        {{- if .Values.logscale.nodepools.ui.priorityClassName }}
        priorityClassName: {{ .Values.logscale.nodepools.ui.priorityClassName }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ui.resources }}
        resources:
          {{- toYaml . | nindent 14 }}
        {{- end }}        
        {{- with .Values.logscale.nodepools.ui.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ui.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.logscale.nodepools.ui.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        dataVolumePersistentVolumeClaimSpecTemplate:
        {{- with .Values.logscale.frontEndDataVolumePersistentVolumeClaimSpecTemplate }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        dataVolumePersistentVolumeClaimPolicy: 
          reclaimType: {{ .Values.logscale.frontEnddataVolumePersistentVolumeClaimPolicy | default "None" }}
        humioServiceType: {{ .Values.logscale.service.ui.type }}
        humioServiceAnnotations:
          service.kubernetes.io/topology-aware-hints: auto
          {{- with .Values.logscale.service.ui.annotations }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if eq .Values.platform.provider "gcp" }}
          cloud.google.com/backend-config: '{"default": "{{ include "humio-instance.fullname" . }}-ui"}'
          {{- end }}
        environmentVariables:
          - name: NODE_ROLES
            value: httponly
          - name: QUERY_COORDINATOR
            value: "true"
{{- end }}
{{- end }}