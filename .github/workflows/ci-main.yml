#
name: Main CI
#
on:
  push:
    branches:
      - "main"
      - "next"
      - "next-major"
  pull_request:
    branches:
      - "main"
      - "next"
      - "next-major"
jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      dockerhub-publish: ${{ steps.dockerhub-publish.outputs.defined }}
      registry: ghcr.io/${{ github.repository }}/container:${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
      container_tags: ${{ steps.docker_action_meta.outputs.tags }}
      container_labels: ${{ steps.docker_action_meta.outputs.labels }}
      container_buildtime: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created'] }}
      container_version: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
      container_revision: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
      container_base: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
      new_release_version: ${{ steps.version.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          persist-credentials: false
      - id: dockerhub-publish
        if: "${{ env.MY_KEY != '' }}"
        run: echo "::set-output name=defined::true"
        env:
          MY_KEY: ${{ secrets.DOCKER_PASS }}
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v4.0.0
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
            @semantic-release/github@8.1.0
            @semantic-release/changelog@6.0.3
            conventional-changelog-conventionalcommits@6.1.0
            @semantic-release/exec@6.0.3     
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_USERNAME: ${{ github.repository_owner }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          flavor: |
            latest=false
          tags: |
            type=sha,format=long
            type=sha
            type=semver,pattern={{version}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.new_release_version }}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
          labels: |
            org.opencontainers.image.licenses=Apache-2.0
  runTests:
    runs-on: ubuntu-latest
    needs: [meta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: azure/setup-helm@v4

      # - name: Lint Azure
      #   run: |
      #     helm lint chart -f tests/common/host.yaml -f tests/common/humio.yaml -f tests/common/sso.yaml -f tests/azure/basic.yaml


  Containerize:
    runs-on: ubuntu-latest
    needs: [runTests, meta]
    steps:
      #Yes we need code
      - uses: actions/checkout@v4
        with:
          submodules: false
          persist-credentials: false

      - name: Login to ghcr for helm
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login --password-stdin -u ${{ github.repository_owner }} ghcr.io/${{ github.repository_owner }}

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: azure/setup-helm@v4

      - name: Semantic Release
        if: github.event_name != 'pull_request'
        id: version
        uses: cycjimmy/semantic-release-action@v4.0.0
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            @semantic-release/commit-analyzer@9.0.2
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
            @semantic-release/github@8.1.0
            @semantic-release/changelog@6.0.3
            conventional-changelog-conventionalcommits@6.1.0
            @semantic-release/exec@6.0.3     
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_USERNAME: ${{ github.repository_owner }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
